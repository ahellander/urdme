###########################################################################
# this file is normally executed by the MATLAB interface
###########################################################################

ifeq ($(URDME_ROOT),)
    $(error URDME_ROOT is not set)
endif
URDME=$(URDME_ROOT)
LIB = $(URDME)/lib
BIN = $(URDME)/bin

HDF5=$(URDME)/lib/hdf5-1.8.11/hdf5
INCLUDE = -I$(URDME)/include -I$(HDF5)/include
SRC = $(URDME)/src

###########################################################################
MATLAB = $(shell $(URDME_ROOT)/bin/urdme_init -m)
MATLAB_ARCH = $(shell $(URDME_ROOT)/bin/urdme_init -a)
###########################################################################
MATLAB_EXT = $(MATLAB)/extern
MATLAB_INC=$(MATLAB_EXT)/include
###########################################################################
ARCHS=$(shell $(URDME_ROOT)/bin/urdme_init -s)
ifneq ($(ARCHS),)
SET_ARCH=-arch $(ARCHS)
endif
###########################################################################

URDME_LIBMAT=yes
ifeq ($(URDME_LIBMAT),)
LMAT = -lmx -lmat -lmex -lmwservices 
MATLAB_LIB =-L$(MATLAB)/bin/$(MATLAB_ARCH)
else
DMAT = -DURDME_LIBMAT
endif

# Sparse output
#DSPARSE = -DURDME_OUTPUT_SPARSE
ifdef DSPARSE
ifdef URDME_LIBMAT
$(error URDME_LIBMAT does not support sparse output, please use Matlab libraries.)
endif
endif
 
CC	   = gcc
LINKER = gcc 

CFLAGS = -gdwarf-2 -m64 -c $(SET_ARCH) -O3 -std=gnu99 $(MEMOPTS) -Wall -Wlong-long -Wformat -Wpointer-arith -I$(MATLAB_INC) $(INCLUDE) $(DMAT) $(DSPARSE)

LFLAGS_BASE= -l hdf5 -l hdf5_hl -L$(HDF5)/lib
ifeq ($(MATLAB_LIB),)
LFLAGS = $(LFLAGS_BASE) -lm
else
LFLAGS = $(LFLAGS_BASE) $(MATLAB_LIB) -lm $(LMAT)
endif

###########################################################################
ifeq ($(URDME_MODEL),)
     $(error URDME_MODEL not set)
endif
###########################################################################
# destination directory
OUT=.urdme/
###########################################################################
###########################################################################
###########################################################################
###########################################################################

all:  nsm
nsm: $(OUT)$(URDME_MODEL).nsm

###########################################################################

ifeq ($(URDME_LIBMAT),)
OBJS=nsm.o nsmcore.o report.o binheap.o matmodel.o $(URDME_MODEL).o
else
OBJS=nsm.o nsmcore.o report.o binheap.o matmodel.o read_matfile.o $(URDME_MODEL).o
endif

DEPS= $(addprefix $(OUT),$(OBJS))

testmakefile: 
	-echo $(URDME_MODEL).nsm
	-echo $(URDME)

$(OUT)$(URDME_MODEL).nsm: $(OUT) $(DEPS)
	$(LINKER) -o $(OUT)$(URDME_MODEL).nsm $(DEPS) $(LFLAGS)

$(OUT):
	-mkdir -p $(OUT)

$(OUT)$(URDME_MODEL).o: $(OUT)$(URDME_MODEL).c
	$(CC) $(CFLAGS) $(OUT)$(URDME_MODEL).c -o $(OUT)$(URDME_MODEL).o 

$(OUT)nsm.o: $(SRC)/nsm/nsm.c 
	$(CC) $(CFLAGS) $(SRC)/nsm/nsm.c -o $(OUT)nsm.o

$(OUT)nsmcore.o: $(SRC)/nsm/nsmcore.c 
	$(CC) $(CFLAGS) $(SRC)/nsm/nsmcore.c -o $(OUT)nsmcore.o

$(OUT)report.o: $(SRC)/report.c
	$(CC) $(CFLAGS) $(SRC)/report.c -o $(OUT)report.o

$(OUT)matmodel.o: $(SRC)/matmodel.c 
	$(CC) $(CFLAGS) $(SRC)/matmodel.c -o $(OUT)matmodel.o

$(OUT)read_matfile.o: $(SRC)/read_matfile.c 
	$(CC) $(CFLAGS) $(SRC)/read_matfile.c -o $(OUT)read_matfile.o
    

$(OUT)binheap.o: $(SRC)/nsm/binheap.c
	$(CC) $(CFLAGS) $(SRC)/nsm/binheap.c -o $(OUT)binheap.o

clean:
	rm -f $(DEPS)
	rm -f $(OUT)$(URDME_MODEL).nsm 

